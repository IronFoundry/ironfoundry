<?xml version="1.0" encoding="UTF-8"?>
<Wix
  xmlns="http://schemas.microsoft.com/wix/2006/wi"
  xmlns:iis="http://schemas.microsoft.com/wix/IIsExtension"
  xmlns:util="http://schemas.microsoft.com/wix/UtilExtension"
  xmlns:netfx="http://schemas.microsoft.com/wix/NetFxExtension">

  <?ifndef var.VERSION ?>
    <?define VERSION = '1.0.0.0' ?>
  <?endif?>

  <?define var.SVCBUILDDIR = $(var.IronFoundry.Dea.Service.TargetDir)?>

  <?if $(sys.BUILDARCH) = x64?>
    <?define SEARCH.WIN64.REG = 'yes' ?>
    <?define WIN64.COMPONENTS = 'yes' ?>
    <?define ProgramFilesDirectoryId = 'ProgramFiles64Folder' ?>
  <?else?>
    <?define SEARCH.WIN64.REG = 'no' ?>
    <?define WIN64.COMPONENTS = 'no' ?>
    <?define ProgramFilesDirectoryId = 'ProgramFilesFolder' ?>
  <?endif?>

  <!-- Do Not Change These Values -->
  <?define ProductName = 'Iron Foundry DEA' ?>
  <?define ShortProductName = 'DEA' ?>
  <?define Manufacturer = 'Iron Foundry' ?>
  <?define UpgradeCode = '{748a94e6-f23b-4ff9-b1de-92851ee357d2}' ?><!-- NEVER CHANGE THIS -->
  <?define RootRegistryPath = "SOFTWARE\Iron Foundry\DEA" ?>

  <Product
    Id="*"
    Name="$(var.ProductName)"
    Language="1033"
    Version="$(var.VERSION)"
    Manufacturer="Tier 3"
    UpgradeCode="$(var.UpgradeCode)">

    <!-- InstallerVersion="200" -->
    <Package
      Comments="$(var.ProductName)"
      Keywords="$(var.ProductName)"
      Description="Provides support for ASP.NET deployment within a Cloud Foundry environment."
      InstallerVersion="200"
      InstallPrivileges="elevated"
      InstallScope="perMachine"
      Languages="1033"
      Compressed="yes"
      Platform="$(sys.BUILDARCH)"
      Manufacturer="$(var.Manufacturer)"
      />

    <!-- Add Remove Programs Properties -->
    <Property Id="ARPHELPLINK" Value="http://www.ironfoundry.org" />
    <Property Id="ARPURLINFOABOUT" Value="http://www.ironfoundry.org" />
    <!--Property Id="ARPHELPTELEPHONE" Value="" /-->
    <Property Id="ARPCONTACT" Value="support@ironfoundry.zendesk.com" />
    <Icon Id="cloud.ico" SourceFile="$(var.SVCBUILDDIR)CloudFoundrySmall.ico"/>
    <Property Id="ARPPRODUCTICON" Value="cloud.ico" />

    <!-- Major Upgrade -->
    <Upgrade Id="$(var.UpgradeCode)">
      <UpgradeVersion Minimum="$(var.VERSION)" IncludeMinimum="no" OnlyDetect="yes" Property="NEWERVERSIONDETECTED" Language="1033" />
      <UpgradeVersion Minimum="0.0.0.0" IncludeMinimum="yes" Maximum="$(var.VERSION)" IncludeMaximum="no"
        Property="OLDERVERSIONBEINGUPGRADED" OnlyDetect="no" IgnoreRemoveFailure="yes" MigrateFeatures="yes" Language="1033"/>
    </Upgrade>

    <PropertyRef Id="NETFRAMEWORK40FULL"/>
    <PropertyRef Id="NETFRAMEWORK40FULLINSTALLROOTDIR"/>
    <PropertyRef Id="NETFRAMEWORK40FULLINSTALLROOTDIR64"/>
    <PropertyRef Id="IISMAJORVERSION"/>
    <PropertyRef Id="IISMINORVERSION"/>

    <Property Id="INSTALLDIR">
      <RegistrySearch
        Id="RegINSTALLDIR"
        Root="HKLM"
        Win64="$(var.SEARCH.WIN64.REG)"
        Type="raw"
        Name="INSTALLDIR"
        Key="$(var.RootRegistryPath)" />
    </Property>

    <Property Id="SERVICENAME" Value="$(var.ProductName) Service">
      <RegistrySearch
        Id="RegSERVICENAME"
        Root="HKLM"
        Win64="$(var.SEARCH.WIN64.REG)"
        Type="raw"
        Name="SERVICENAME"
        Key="$(var.RootRegistryPath)" />
    </Property>

    <!-- START (Install Conditions) -->
    <Condition Message="[ProductName] setup requires Administrator privileges. Setup will now exit.">
      <![CDATA[Privileged]]>
    </Condition>

    <Condition Message="[ProductName] requires .NET Framework 4.0 Full. Setup will now exit.">
      <![CDATA[Installed OR NETFRAMEWORK40FULL]]>
    </Condition>
    
    <Condition Message="Install requires IIS 7.5">
       <![CDATA[Installed OR (IISMAJORVERSION = "#7" AND IISMINORVERSION = "#5")]]>
    </Condition>

    <Condition Message="ALLUSERS must be 1. Setup will now exit."><![CDATA[ALLUSERS = 1]]></Condition>
    <!-- END (Install Conditions) -->

    <Media Id="1" Cabinet="IronFoundry.DEA.Service.cab" EmbedCab="yes" />

    <Directory Id="TARGETDIR" Name="SourceDir">
      <Directory Id="$(var.ProgramFilesDirectoryId)">
        <Directory Id="IronFoundryDirectory" Name="$(var.Manufacturer)">
          <Directory Id="WindowsServiceDirectory" Name="$(var.ShortProductName)">
            <Directory Id="INSTALLDIR" Name=".">

              <Directory Id="LogDir" Name="logs">
                <Component Id="MaintainLogDir" Guid="{3CCE87D0-83ED-4445-96CB-346595743F2F}" Win64="$(var.WIN64.COMPONENTS)" KeyPath="yes" >
                  <CreateFolder />
                  <RemoveFolder Id="MaintainLogDir.Remove" On="both" />
                  <RemoveFile Id="MaintainLogDir.RemoveFile" On="uninstall" Name="*.*" />
                </Component>
              </Directory>

              <Component Id="MaintainInstallDir" Guid="{93A36DF5-0F0B-47CC-A2DA-1CD8EDDD2F86}" Win64="$(var.WIN64.COMPONENTS)" KeyPath="yes" >
                <CreateFolder />
                <RemoveFolder Id="Remove.DEA" Directory="WindowsServiceDirectory" On="uninstall" />
                <RemoveFolder Id="Remove.InstallLocation" On="uninstall" />
                <RemoveFile Id="RemoveFiles.InstallLocation" Name="*.*" On="uninstall" />
              </Component>

              <!-- START (Install Registry) -->
              <?include IronFoundryShared.wxi?>

              <Component Id="PerProductRegistryKey" Guid="{112F503E-8AF1-4532-96F9-DECC8A58A34C}" Win64="$(var.WIN64.COMPONENTS)">
                <Condition><![CDATA[ALLUSERS = 1]]></Condition>
                <RegistryKey Root="HKLM" Action="none" Key="SOFTWARE">
                  <RegistryKey Action="create" Key="Iron Foundry">
                    <Permission User="Administrators" GenericRead="yes" Read="yes" GenericWrite="yes" Write="yes" TakeOwnership="yes" />
                    <RegistryKey Action="createAndRemoveOnUninstall" Key="$(var.ShortProductName)">
                      <RegistryValue Value="[ProductVersion]" Type="string" KeyPath="yes"/>
                    </RegistryKey>
                  </RegistryKey>
                </RegistryKey>
              </Component>

              <Component Id="InstallDirRegKey" Guid="{E654A926-26E0-493C-966E-52C09381DB8C}" Win64="$(var.WIN64.COMPONENTS)">
                <RegistryKey Root="HKLM" Action="none" Key="$(var.RootRegistryPath)">
                  <RegistryValue Name="INSTALLDIR" Value="[INSTALLDIR]" Type="string" KeyPath="yes"/>
                </RegistryKey>
              </Component>

              <Component Id="ProductCodeRegKey" Guid="{E15E3268-2C61-4F20-A394-493665E8C210}" Win64="$(var.WIN64.COMPONENTS)">
                <RegistryKey Root="HKLM" Action="none" Key="$(var.RootRegistryPath)">
                  <RegistryValue Name="ProductCode" Value="[ProductCode]" Type="string" KeyPath="yes"/>
                </RegistryKey>
              </Component>
              <!-- END (Install Registry)-->

              <!-- START (StartMenu Shortcuts) -->
              <Directory Id="ProgramMenuFolder">
                <Directory Id="ApplicationProgramsFolder" Name="$(var.Manufacturer)">
                  <Component Id="UninstallShortcut" Guid="{8487965D-8106-4951-8D81-EE42E98EBC9C}">
                    <Shortcut Id="UninstallProduct"
                              Name="Uninstall $(var.ShortProductName)"
                              Description="Uninstalls $(var.ProductName)"
                              Target="[System64Folder]msiexec.exe"
                              Arguments="/x [ProductCode]"/>
                    <RemoveFolder Id="ApplicationProgramsFolderUninstall" On="uninstall" />
                    <RemoveFolder Id="ProgramMenuFolderUninstall" On="uninstall" />
                    <RegistryKey Root="HKCU" Action="none" Key="$(var.RootRegistryPath)">
                      <RegistryValue Type="integer" Name="UninstallShortcut" Value="1" KeyPath="yes" />
                    </RegistryKey>
                  </Component>
                </Directory>
              </Directory>
              <!-- END (StartMenu Shortcuts) -->

              <!-- START (Windows Service) -->
              <Component Id="IronFoundry.Dea.Service.exe.config" Guid="{CC6BBC08-84E8-4B99-AD87-C92671837C8B}" Win64="$(var.WIN64.COMPONENTS)">
                <File Id="IronFoundry.Dea.Service.exe.config"
                      Name="IronFoundry.Dea.Service.exe.config"
                      Source="$(var.SVCBUILDDIR)IronFoundry.Dea.Service.exe.config" />

                <util:XmlFile Id="Config.XmlFile.1" Sequence="1" Action="setValue"
                    File="[#IronFoundry.Dea.Service.exe.config]"
                    ElementPath="/configuration/ironFoundryDea/@natsHost"
                    Value="[NATSHOST]"/>
                <util:XmlFile Id="Config.XmlFile.2" Sequence="2" Action="setValue"
                    File="[#IronFoundry.Dea.Service.exe.config]"
                    ElementPath="/configuration/ironFoundryDea/@natsPort"
                    Value="[NATSPORT]"/>
                <util:XmlFile Id="Config.XmlFile.3" Sequence="3" Action="setValue"
                    File="[#IronFoundry.Dea.Service.exe.config]"
                    ElementPath="/configuration/ironFoundryDea/@localRoute"
                    Value="[LOCALROUTE]"/>
                <util:XmlFile Id="Config.XmlFile.4" Sequence="4" Action="setValue"
                    File="[#IronFoundry.Dea.Service.exe.config]"
                    ElementPath="/configuration/ironFoundryDea/@appDir"
                    Value="[APPDIR]"/>
                <util:XmlFile Id="Config.XmlFile.5" Sequence="5" Action="setValue"
                    File="[#IronFoundry.Dea.Service.exe.config]"
                    ElementPath="/configuration/ironFoundryDea/@dropletDir"
                    Value="[DROPLETDIR]"/>
                <util:XmlFile Id="Config.XmlFile.6" Sequence="6" Action="setValue"
                    File="[#IronFoundry.Dea.Service.exe.config]"
                    ElementPath="/configuration/ironFoundryDea/@natsUser"
                    Value="[NATSUSER]"/>
                <util:XmlFile Id="Config.XmlFile.7" Sequence="7" Action="setValue"
                    File="[#IronFoundry.Dea.Service.exe.config]"
                    ElementPath="/configuration/ironFoundryDea/@natsPassword"
                    Value="[NATSPASSWORD]"/>
              </Component>

              <Component Id="ServiceConfigKeys" Guid="{0FCFE86A-787E-420A-B1E7-13A0F68758E9}" Win64="$(var.WIN64.COMPONENTS)">
                <RegistryKey Id="ServiceConfigKey" Action="createAndRemoveOnUninstall" Key="$(var.RootRegistryPath)" Root="HKLM">
                  <RegistryValue Id="regNatsHost" Name="NatsHost" Value="[NATSHOST]" Type="string"/>
                  <RegistryValue Id="regNatsPort" Name="NatsPort" Value="[NATSPORT]" Type="string"/>
                  <RegistryValue Id="regNatsUser" Name="NatsPort" Value="[NATSUSER]" Type="string"/>
                  <RegistryValue Id="regNatsPassword" Name="NatsPort" Value="[NATSPASSWORD]" Type="string"/>
                  <RegistryValue Id="regLocalRoute" Name="LocalRoute" Value="[LOCALROUTE]" Type="string"/>
                  <RegistryValue Id="regAppDir" Name="AppDir" Value="[APPDIR]" Type="string"/>
                  <RegistryValue Id="regDropletDir" Name="DropletDir" Value="[DROPLETDIR]" Type="string"/>
                </RegistryKey>
              </Component>
              
              <Component Id="IronFoundry.Dea.Service" Guid="{12CF1125-8E7A-4FE2-8BD0-DF3889222B61}" Win64="$(var.WIN64.COMPONENTS)">
                <File Id="IronFoundry.Dea.Service.exe"
                      Name="IronFoundry.Dea.Service.exe"
                      Source="$(var.SVCBUILDDIR)IronFoundry.Dea.Service.exe" />                                
                <File Id="NLog.dll"
                      Name="NLog.dll"
                      Source="$(var.SVCBUILDDIR)NLog.dll" />
                <File Id="ICSharpCode.SharpZipLib.dll"
                      Name="ICSharpCode.SharpZipLib.dll"
                      Source="$(var.SVCBUILDDIR)ICSharpCode.SharpZipLib.dll" />
                <File Id="IronFoundry.Dea.dll"
                      Name="IronFoundry.Dea.dll"
                      Source="$(var.SVCBUILDDIR)IronFoundry.Dea.dll" />
                <File Id="Newtonsoft.Json.dll"
                      Name="Newtonsoft.Json.dll"
                      Source="$(var.SVCBUILDDIR)Newtonsoft.Json.dll" />
                <File Id="StructureMap.dll"
                      Name="StructureMap.dll"
                      Source="$(var.SVCBUILDDIR)StructureMap.dll" />
                <File Id="IronFoundry.Dea.Service.pdb"
                      Name="IronFoundry.Dea.Service.pdb"
                      Source="$(var.SVCBUILDDIR)IronFoundry.Dea.Service.pdb" />
                <File Id="IronFoundry.Dea.pdb"
                      Name="IronFoundry.Dea.pdb"
                      Source="$(var.SVCBUILDDIR)IronFoundry.Dea.pdb" />
                <File Id="StructureMap.pdb"
                      Name="StructureMap.pdb"
                      Source="$(var.SVCBUILDDIR)StructureMap.pdb" />

                <ServiceInstall Id="IronFoundry.DEA.Service.ServiceInstaller"
                                Type="ownProcess"
                                Vital="yes"
                                Name="IronFoundryDEA"
                                DisplayName="[SERVICENAME]"
                                Description="$(var.ProductName) Service"
                                Start="auto"
                                Account="LocalSystem"
                                ErrorControl="ignore"
                                Interactive="no">
                                <util:ServiceConfig FirstFailureActionType="restart" SecondFailureActionType="restart" ThirdFailureActionType="restart"
                                  RestartServiceDelayInSeconds="180" ResetPeriodInDays="1" />
                </ServiceInstall>
                <ServiceControl Id="IronFoundry.DEA.Service.StartService"
                                Start="install"
                                Name="IronFoundryDEA"
                                Wait="yes" />
                <ServiceControl Id="IronFoundry.DEA.Service.StopService"
                                Stop="uninstall"
                                Remove="uninstall"
                                Name="IronFoundryDEA"
                                Wait="yes" />
                <RegistryKey Id="ServiceNameKey" Action="createAndRemoveOnUninstall" Key="$(var.RootRegistryPath)" Root="HKLM">
                  <RegistryValue Id="SERVICENAME" Name="ServiceName" Value="[SERVICENAME]" Type="string" />
                </RegistryKey>
              </Component>
              <!-- END (Windows Service) -->

            </Directory>
          </Directory>
        </Directory>
      </Directory>
    </Directory>

    <!-- START (Configuration Settings) -->
    <Property Id="NATSHOST" Secure="yes">
      <RegistrySearch Root="HKLM" Type="raw" Key="$(var.RootRegistryPath)" Id="regNatsHost" Name="NatsHost"/>
    </Property>
    <Property Id="NATSPORT" Secure="yes" Value="4222">
      <RegistrySearch Root="HKLM" Type="raw" Key="$(var.RootRegistryPath)" Id="regNatsPort" Name="NatsPort" />
    </Property>
    <Property Id="NATSUSER" Secure="yes">
      <RegistrySearch Root="HKLM" Type="raw" Key="$(var.RootRegistryPath)" Id="regNatsUser" Name="NatsUser" />
    </Property>
    <Property Id="NATSPASSWORD" Secure="yes">
      <RegistrySearch Root="HKLM" Type="raw" Key="$(var.RootRegistryPath)" Id="regNatsPassword" Name="NatsPassword" />
    </Property>
    <Property Id="LOCALROUTE" Secure="yes">
      <RegistrySearch Root="HKLM" Type="raw" Key="$(var.RootRegistryPath)" Id="regLocalRoute" Name="LocalRoute" />
    </Property>
    <Property Id="APPDIR" Secure="yes" Value="C:\IronFoundry\apps">
      <RegistrySearch Root="HKLM" Type="raw" Key="$(var.RootRegistryPath)" Id="regAppDir" Name="AppDir" />
    </Property>
    <Property Id="DROPLETDIR" Secure="yes" Value="C:\IronFoundry\droplets">
      <RegistrySearch Root="HKLM" Type="raw" Key="$(var.RootRegistryPath)" Id="regDropletDir" Name="DropletDir" />
    </Property>
    <!-- END (Configuration Settings) -->

    <!-- START (User Interface) Reference: http://wix.sourceforge.net/manual-wix3/WixUI_dialog_library.htm -->
    <WixVariable Id="WixUIBannerBmp"  Value="Banner.bmp" />
    <WixVariable Id="WixUIDialogBmp"  Value="WelcomeBanner.bmp" />
    <WixVariable Id="WixUILicenseRtf" Value="License.rtf" />
    <WixVariable Id="WixUISupportPerUser" Value="0" />

    <!-- Define variables that the ServiceConfigDlg uses -->
    <WixVariable Id="ServiceConfigNatsHostProperty" Value="NATSHOST"/>
    <WixVariable Id="ServiceConfigNatsPortProperty" Value="NATSPORT"/>
    <WixVariable Id="ServiceConfigNatsUserProperty" Value="NATSUSER"/>
    <WixVariable Id="ServiceConfigNatsPasswordProperty" Value="NATSPASSWORD"/>
    <WixVariable Id="ServiceConfigLocalRouteProperty" Value="LOCALROUTE"/>
    <WixVariable Id="ServiceConfigAppDirProperty" Value="APPDIR"/>
    <WixVariable Id="ServiceConfigDropletDirProperty" Value="DROPLETDIR"/>

    <Property Id="WIXUI_FEATURETREE" Value="$(var.ProductName) Service"/>

    <UIRef Id="WixUI_Common" />

    <UI>
      <TextStyle Id="WixUI_Font_Normal" FaceName="Tahoma" Size="8" />
      <TextStyle Id="WixUI_Font_Bigger" FaceName="Tahoma" Size="12" />
      <TextStyle Id="WixUI_Font_Title"  FaceName="Tahoma" Size="9" />

      <Property Id="DefaultUIFont" Value="WixUI_Font_Normal" />
      <Property Id="WixUI_Mode"    Value="FeatureTree" />

      <DialogRef Id="ErrorDlg"        />
      <DialogRef Id="FatalError"      />
      <DialogRef Id="FilesInUse"      />
      <DialogRef Id="MsiRMFilesInUse" />
      <DialogRef Id="PrepareDlg"      />
      <DialogRef Id="ProgressDlg"     />
      <DialogRef Id="ResumeDlg"       />
      <DialogRef Id="UserExit"        />

      <!-- Storage Config Dialogs -->
      <?include ServiceConfigDialog.wxi?>

      <Publish Dialog="WelcomeDlg" Control="Next" Event="NewDialog" Value="LicenseAgreementDlg">1</Publish>
      <Publish Dialog="LicenseAgreementDlg" Control="Back" Event="NewDialog" Value="WelcomeDlg">1</Publish>
      <Publish Dialog="LicenseAgreementDlg" Control="Next" Event="NewDialog" Value="CustomizeDlg"><![CDATA[LicenseAccepted = "1"]]></Publish>

      <Publish Dialog="MaintenanceWelcomeDlg" Control="Next" Event="NewDialog" Value="MaintenanceTypeDlg">1</Publish>

      <Publish Dialog="CustomizeDlg" Control="Back" Event="NewDialog" Order="1" Value="LicenseAgreementDlg"><![CDATA[NOT Installed]]></Publish>
      <Publish Dialog="CustomizeDlg" Control="Back" Event="NewDialog" Order="2" Value="MaintenanceTypeDlg"><![CDATA[Installed]]></Publish>
      <Publish Dialog="CustomizeDlg" Control="Next" Event="NewDialog" Order="1" Value="ServiceConfigDlg">1</Publish>

      <Publish Dialog="ServiceConfigDlg" Control="Back" Event="NewDialog" Order="1" Value="CustomizeDlg"><![CDATA[NOT WixUI_InstallMode = "Repair"]]></Publish>
      <Publish Dialog="ServiceConfigDlg" Control="Back" Event="NewDialog" Order="2" Value="MaintenanceTypeDlg"><![CDATA[Installed AND WixUI_InstallMode = "Repair"]]></Publish>
      <Publish Dialog="ServiceConfigDlg" Control="Next" Event="NewDialog" Order="1" Value="VerifyReadyDlg">1</Publish>

      <Publish Dialog="VerifyReadyDlg" Control="Back" Order="1" Value="MaintenanceTypeDlg" Event="NewDialog"><![CDATA[WixUI_InstallMode = "Remove"]]></Publish>
      <Publish Dialog="VerifyReadyDlg" Control="Back" Order="2" Value="ServiceConfigDlg" Event="NewDialog"><![CDATA[NOT WixUI_InstallMode = "Remove"]]></Publish>

      <Publish Dialog="MaintenanceTypeDlg" Control="ChangeButton"  Event="NewDialog" Value="CustomizeDlg">1</Publish>
      <Publish Dialog="MaintenanceTypeDlg" Control="RepairButton"  Event="NewDialog" Value="ServiceConfigDlg">1</Publish>
      <Publish Dialog="MaintenanceTypeDlg" Control="RemoveButton"  Event="NewDialog" Value="VerifyReadyDlg">1</Publish>
      <Publish Dialog="MaintenanceTypeDlg" Control="Back"          Event="NewDialog" Value="MaintenanceWelcomeDlg">1</Publish>

      <Publish Dialog="ExitDialog" Control="Finish" Event="EndDialog" Value="Return" Order="1">1</Publish>
    </UI>
    <!-- END (User Interface) -->
    
    <ComponentGroup Id="CommonComponents">
      <ComponentRef Id="InstallDirRegKey" Primary="yes"/>
      <ComponentRef Id="PerProductRegistryKey" Primary="yes"/>
      <ComponentRef Id="IronFoundryRegKey" Primary="yes"/>
      <ComponentRef Id="MaintainLogDir" Primary="yes"/>
      <ComponentRef Id="MaintainInstallDir" Primary="yes"/>
      <ComponentRef Id="MaintainIronFoundryDir" Primary="yes"/>
    </ComponentGroup>

    <ComponentGroup Id="DeaServiceComponents">
      <ComponentRef Id="IronFoundry.Dea.Service" Primary="yes" />
      <ComponentRef Id="IronFoundry.Dea.Service.exe.config" Primary="yes"/>
      <ComponentRef Id="ServiceConfigKeys" Primary="yes"/>
      <ComponentRef Id="UninstallShortcut" Primary="yes"/>
      <ComponentRef Id="ProductCodeRegKey" Primary="yes"/>
    </ComponentGroup>

    <InstallUISequence>
      <FindRelatedProducts Before="LaunchConditions" />
      <Custom Action="NewerVersion" After="FindRelatedProducts"><![CDATA[NEWERVERSIONDETECTED]]></Custom>
    </InstallUISequence>

    <CustomAction Id="NewerVersion" Error="This version or a newer version of [ProductName] is already installed." />

    <InstallExecuteSequence>
      <Custom Action="NewerVersion" Before="FindRelatedProducts"><![CDATA[NEWERVERSIONDETECTED]]></Custom>
      <RemoveExistingProducts After="InstallFinalize"/>
    </InstallExecuteSequence>

    <Feature Id="Product" 
             Title="$(var.ShortProductName) Service" 
             Description="$(var.ProductName) Service $(var.VERSION)" 
             Level="1" AllowAdvertise="no" InstallDefault="local" 
             Absent="disallow" ConfigurableDirectory="INSTALLDIR" TypicalDefault="install">
      <ComponentGroupRef Id="DeaServiceComponents" Primary="yes" />
      <ComponentGroupRef Id="CommonComponents" />
    </Feature>
  </Product>
</Wix>
