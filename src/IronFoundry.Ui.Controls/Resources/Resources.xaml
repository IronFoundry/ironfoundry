<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:IronFoundry.Ui.Controls.Converters"
    xmlns:vm="clr-namespace:IronFoundry.Ui.Controls.Mvvm"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" mc:Ignorable="d">
  <!--
    x:Class="IronFoundry.Ui.Controls.Resources.c__t3source_ironfoundry_src_ironfoundry_vsextension_ui_controls_resources_resources_xaml">
  -->

  <LinearGradientBrush x:Key="HeaderBackground" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="#FFE2EAF2" Offset="1" />
    <GradientStop Color="White" Offset="0" />
  </LinearGradientBrush>

  <SolidColorBrush x:Key="DarkBlueBrushKey">#FF1B4C7E</SolidColorBrush>
  <Color x:Key="DarkBlueColor">#FF1B4C7E</Color>
  <SolidColorBrush x:Key="LightBlueBrushKey">#FFE2EAF2</SolidColorBrush>
  <Color x:Key="LightBlueColor">#FFE2EAF2</Color>
  <SolidColorBrush x:Key="BorderBlueBrush">#FFBACADB</SolidColorBrush>
  <Color x:Key="BorderBlueColor">#FFBACADB</Color>

  <ControlTemplate x:Key="ExpanderToggleButton"
                     TargetType="{x:Type ToggleButton}">
    <Border x:Name="Border"
                CornerRadius="10,0,0,0"
                BorderThickness="2,2,0,0"
                Background="{x:Null}"
                BorderBrush="{x:Null}">
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="CommonStates">
          <VisualState x:Name="Normal" />
          <VisualState x:Name="MouseOver" />
          <VisualState x:Name="Pressed" />
          <VisualState x:Name="Disabled" />
        </VisualStateGroup>
        <VisualStateGroup x:Name="CheckStates">
          <VisualState x:Name="Checked">
            <Storyboard>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                           Storyboard.TargetName="CollapsedArrow">
                <DiscreteObjectKeyFrame KeyTime="0"
                                                        Value="{x:Static Visibility.Hidden}" />
              </ObjectAnimationUsingKeyFrames>
              <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                           Storyboard.TargetName="ExpandededArrow">
                <DiscreteObjectKeyFrame KeyTime="0"
                                                        Value="{x:Static Visibility.Visible}" />
              </ObjectAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Unchecked" />
          <VisualState x:Name="Indeterminate" />
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
      <Grid>
        <Path x:Name="CollapsedArrow"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      Data="M 0 0 L 4 4 L 8 0 Z">
          <Path.Fill>
            <SolidColorBrush Color="{DynamicResource DarkBlueColor}" />
          </Path.Fill>
        </Path>
        <Path x:Name="ExpandededArrow"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      Visibility="Collapsed"
                      Data="M 0 4 L 4 0 L 8 4 Z">
          <Path.Fill>
            <SolidColorBrush Color="{DynamicResource DarkBlueColor}" />
          </Path.Fill>
        </Path>
      </Grid>
    </Border>
  </ControlTemplate>

  <Style TargetType="{x:Type Expander}">
    <Setter Property="FontWeight" Value="Normal" />
    <Setter Property="FontSize" Value="10.667" />
    <Setter Property="HorizontalAlignment" Value="Stretch" />
    <Setter Property="VerticalAlignment" Value="Stretch" />
    <Setter Property="Foreground" Value="{StaticResource DarkBlueBrushKey}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Expander}">
          <Grid>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition x:Name="ContentRow"
                                           Height="0" />
            </Grid.RowDefinitions>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver" />
                <VisualState x:Name="Disabled" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="Border"
                                Grid.Row="0"
                                BorderThickness="2"
                                CornerRadius="10,10,0,0">
              <Border.BorderBrush>
                <LinearGradientBrush EndPoint="0.5,1"
                                                     StartPoint="0.5,0">
                  <GradientStop Color="{DynamicResource BorderBlueColor}"
                                                  Offset="0.504" />
                  <GradientStop Offset="0.767" />
                </LinearGradientBrush>
              </Border.BorderBrush>
              <Border.Background>

                <LinearGradientBrush StartPoint="0,0"
                                                     EndPoint="0,1">
                  <LinearGradientBrush.GradientStops>
                    <GradientStopCollection>
                      <GradientStop Offset="0.75" />
                      <GradientStop Color="{DynamicResource BorderBlueColor}" />
                    </GradientStopCollection>
                  </LinearGradientBrush.GradientStops>
                </LinearGradientBrush>

              </Border.Background>
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="20" />
                  <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <ToggleButton OverridesDefaultStyle="True"
                                              Template="{StaticResource ExpanderToggleButton}"
                                              IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                              Background="{x:Null}" />
                <ContentPresenter Grid.Column="1"
                                                  Margin="4"
                                                  ContentSource="Header"
                                                  RecognizesAccessKey="True"
                                                  OpacityMask="Black" />
              </Grid>
            </Border>
            <Border x:Name="Content"
                                Grid.Row="1"
                                BorderThickness="1,0,1,1"
                                CornerRadius="0,0,2,2"
                                Background="{x:Null}"
                                BorderBrush="{x:Null}">
              <Grid>
                <ContentPresenter Margin="4" />
              </Grid>
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsExpanded"
                                 Value="True">
              <Setter TargetName="ContentRow"
                                    Property="Height"
                                    Value="{Binding DesiredHeight, ElementName=Content}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <converters:MinutesConverter x:Key="minutesConverter" />
  <converters:CsvConverter x:Key="csvConverter" />
  <converters:TitleCaseConverter x:Key="titleCaseConverter" />
  <converters:IsNullConverter x:Key="isNullConverter" />
  <BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter" />

</ResourceDictionary>
