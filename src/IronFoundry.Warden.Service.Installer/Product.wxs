<?xml version="1.0" encoding="UTF-8"?>
<Wix
  xmlns="http://schemas.microsoft.com/wix/2006/wi"
  xmlns:iis="http://schemas.microsoft.com/wix/IIsExtension"
  xmlns:util="http://schemas.microsoft.com/wix/UtilExtension"
  xmlns:netfx="http://schemas.microsoft.com/wix/NetFxExtension">

  <?ifndef var.VERSION ?>
    <?define VERSION = '1.0.0.0' ?>
  <?endif?>

  <?define var.SVCBUILDDIR = $(var.IronFoundry.Warden.Service.TargetDir)?>
  <?define var.CABUILDDIR =  $(var.IronFoundry.Warden.Service.InstallerCA.TargetDir) ?>
  <?define var.PISOBUILDDIR =  $(var.IronFoundry.Warden.ProcessIsolationService.TargetDir) ?>

  <?if $(sys.BUILDARCH) = x64?>
    <?define SEARCH.WIN64.REG = 'yes' ?>
    <?define WIN64.COMPONENTS = 'yes' ?>
    <?define ProgramFilesDirectoryId = 'ProgramFiles64Folder' ?>
  <?else?>
    <?define SEARCH.WIN64.REG = 'no' ?>
    <?define WIN64.COMPONENTS = 'no' ?>
    <?define ProgramFilesDirectoryId = 'ProgramFilesFolder' ?>
  <?endif?>

  <!-- Do Not Change These Values -->
  <?define ProductName = 'Iron Foundry Warden' ?>
  <?define ShortProductName = 'Warden' ?>
  <?define Manufacturer = 'Iron Foundry' ?>
  <?define Description = 'Provides support for .NET within a Cloud Foundry environment.' ?>
  <?define UpgradeCode = '{423ABDE8-50E7-420D-9AD9-A5FCF6E3C53E}' ?><!-- NEVER CHANGE THIS -->
  <?define RootRegistryPath = "SOFTWARE\Iron Foundry\Warden" ?>

  <Product
    Id="*"
    Name="$(var.ProductName)"
    Language="1033"
    Version="$(var.VERSION)"
    Manufacturer="Tier 3"
    UpgradeCode="$(var.UpgradeCode)">

    <!-- InstallerVersion="200" -->
    <Package
      Comments="$(var.ProductName)"
      Keywords="$(var.ProductName)"
      Description="$(var.Description)"
      InstallerVersion="200"
      InstallPrivileges="elevated"
      InstallScope="perMachine"
      Languages="1033"
      Compressed="yes"
      Manufacturer="$(var.Manufacturer)" />

    <!-- Add Remove Programs Properties -->
    <Property Id="ARPHELPLINK" Value="http://www.ironfoundry.org" />
    <Property Id="ARPURLINFOABOUT" Value="http://www.ironfoundry.org" />
    <!--Property Id="ARPHELPTELEPHONE" Value="" /-->
    <Property Id="ARPCONTACT" Value="support@ironfoundry.zendesk.com" />
    <Icon Id="cloud.ico" SourceFile="$(var.SVCBUILDDIR)CloudFoundrySmall.ico"/>
    <Property Id="ARPPRODUCTICON" Value="cloud.ico" />

    <!-- Major Upgrade -->
    <Upgrade Id="$(var.UpgradeCode)">
      <UpgradeVersion Minimum="$(var.VERSION)" IncludeMinimum="no" OnlyDetect="yes" Property="NEWERVERSIONDETECTED" Language="1033" />
      <UpgradeVersion Minimum="0.0.0.0" IncludeMinimum="yes" Maximum="$(var.VERSION)" IncludeMaximum="no"
        Property="OLDERVERSIONBEINGUPGRADED" OnlyDetect="no" IgnoreRemoveFailure="yes" MigrateFeatures="yes" Language="1033"/>
    </Upgrade>

    <PropertyRef Id="NETFRAMEWORK45"/>

    <Property Id="INSTALLDIR">
      <RegistrySearch
        Id="RegINSTALLDIR"
        Root="HKLM"
        Win64="$(var.SEARCH.WIN64.REG)"
        Type="raw"
        Name="INSTALLDIR"
        Key="$(var.RootRegistryPath)" />
    </Property>

    <!-- NOTE: this name is defined in Constants.cs in IronFoundry.Warden.Service project as is 'ironfoundry.warden' -->
    <Property Id="SERVICENAME" Value="$(var.ProductName) Service">
      <RegistrySearch
        Id="RegSERVICENAME"
        Root="HKLM"
        Win64="$(var.SEARCH.WIN64.REG)"
        Type="raw"
        Name="SERVICENAME"
        Key="$(var.RootRegistryPath)" />
    </Property>

    <!-- START (Install Conditions) -->
    <Condition Message="[ProductName] setup requires Administrator privileges. Setup will now exit.">
      <![CDATA[Privileged]]>
    </Condition>

    <Condition Message="[ProductName] requires .NET Framework 4.5. Setup will now exit.">
      <![CDATA[Installed OR NETFRAMEWORK45]]>
    </Condition>

    <Condition Message="ALLUSERS must be 1. Setup will now exit."><![CDATA[ALLUSERS = 1]]></Condition>
    <!-- END (Install Conditions) -->

    <Media Id="1" Cabinet="IronFoundry.Warden.Service.cab" EmbedCab="yes" />

    <Directory Id="TARGETDIR" Name="SourceDir">
      <Directory Id="$(var.ProgramFilesDirectoryId)">
        <Directory Id="IronFoundryDirectory" Name="$(var.Manufacturer)">
          <Directory Id="WindowsServiceDirectory" Name="$(var.ShortProductName)">
            <Directory Id="INSTALLDIR" Name=".">

              <Directory Id="LogDir" Name="log">
                <Component Id="MaintainLogDir" Guid="{9BFC0E59-A297-4FFD-9900-1FA526F1BA80}" Win64="$(var.WIN64.COMPONENTS)" KeyPath="yes" >
                  <CreateFolder />
                  <RemoveFolder Id="MaintainLogDir.Remove" On="both" />
                  <RemoveFile Id="MaintainLogDir.RemoveFile" On="uninstall" Name="*.*" />
                </Component>
              </Directory>

              <Component Id="MaintainInstallDir" Guid="{5EF4AAC0-2A5C-4423-B305-8AA39F2B4268}" Win64="$(var.WIN64.COMPONENTS)" KeyPath="yes" >
                <CreateFolder />
                <RemoveFolder Id="Remove.Warden" Directory="WindowsServiceDirectory" On="uninstall" />
                <RemoveFolder Id="Remove.InstallLocation" On="uninstall" />
                <RemoveFile Id="RemoveFiles.InstallLocation" Name="*.*" On="uninstall" />
              </Component>

              <!-- START (Install Registry) -->
              <?include IronFoundryShared.wxi?>

              <Component Id="PerProductRegistryKey" Guid="{3F24719A-C649-4E81-951D-6BD52F97D927}" Win64="$(var.WIN64.COMPONENTS)">
                <Condition><![CDATA[ALLUSERS = 1]]></Condition>
                <RegistryKey Root="HKLM" Key="SOFTWARE">
                  <RegistryKey Key="Iron Foundry" ForceCreateOnInstall="yes">
                    <Permission User="Administrators" GenericRead="yes" Read="yes" GenericWrite="yes" Write="yes" TakeOwnership="yes" />
                    <RegistryKey Key="$(var.ShortProductName)">
                      <RegistryValue Value="[ProductVersion]" Type="string" KeyPath="yes"/>
                    </RegistryKey>
                  </RegistryKey>
                </RegistryKey>
              </Component>

              <Component Id="InstallDirRegKey" Guid="{A4ADE97C-F7E0-4166-8F53-0474C7EC098E}" Win64="$(var.WIN64.COMPONENTS)">
                <RegistryKey Root="HKLM" Key="$(var.RootRegistryPath)">
                  <RegistryValue Name="INSTALLDIR" Value="[INSTALLDIR]" Type="string" KeyPath="yes"/>
                </RegistryKey>
              </Component>

              <Component Id="ProductCodeRegKey" Guid="{DA5BBC57-2FF1-42D5-A1E0-3708F940A838}" Win64="$(var.WIN64.COMPONENTS)">
                <RegistryKey Root="HKLM" Key="$(var.RootRegistryPath)">
                  <RegistryValue Name="ProductCode" Value="[ProductCode]" Type="string" KeyPath="yes"/>
                </RegistryKey>
              </Component>
              <!-- END (Install Registry)-->

              <!-- START (StartMenu Shortcuts) -->
              <Directory Id="ProgramMenuFolder">
                <Directory Id="ApplicationProgramsFolder" Name="$(var.Manufacturer)">
                  <Component Id="UninstallShortcut" Guid="{E74BC6EE-0C84-4FCC-89C0-CED7AEA51539}">
                    <Shortcut Id="UninstallProduct"
                              Name="Uninstall $(var.ShortProductName)"
                              Description="Uninstalls $(var.ProductName)"
                              Target="[System64Folder]msiexec.exe"
                              Arguments="/x [ProductCode]"/>
                    <RemoveFolder Id="ApplicationProgramsFolderUninstall" On="uninstall" />
                    <RemoveFolder Id="ProgramMenuFolderUninstall" On="uninstall" />
                    <RegistryKey Root="HKCU" Key="$(var.RootRegistryPath)">
                      <RegistryValue Type="integer" Name="UninstallShortcut" Value="1" KeyPath="yes" />
                    </RegistryKey>
                  </Component>
                </Directory>
              </Directory>
              <!-- END (StartMenu Shortcuts) -->

              <!-- START (Windows Service) -->
              <Directory Id="PisoSvcDirectory" Name="PisoSvc">
                <Component Id="IronFoundry.Warden.ProcessIsolationService" Guid="{C0E2BDB5-B26E-4201-96F7-7135600C2FDE}" Win64="$(var.WIN64.COMPONENTS)" KeyPath="no">
                  <CreateFolder />
                  <RemoveFolder Id="PisoSvcDirRemove" On="uninstall" />
                  <File Id="IronFoundry.Warden.ProcessIsolationService.exe"
                    Name="PisoSvc.exe"
                    Source="$(var.PISOBUILDDIR)IronFoundry.Warden.ProcessIsolationService.exe"
                    KeyPath="yes" />
                  <File Id="IronFoundry.Warden.ProcessIsolationService.pdb"
                    Name="PisoSvc.pdb"
                    Source="$(var.PISOBUILDDIR)IronFoundry.Warden.ProcessIsolationService.pdb" />
                  <File Id="IronFoundry.Warden.ProcessIsolationService.exe.config"
                    Name="PisoSvc.exe.config"
                    Source="$(var.PISOBUILDDIR)IronFoundry.Warden.ProcessIsolationService.exe.config" />
                  <File Id="IronFoundry.Warden.ProcessIsolation.dll"
                    Name="IronFoundry.Warden.ProcessIsolation.dll"
                    Source="$(var.PISOBUILDDIR)IronFoundry.Warden.ProcessIsolation.dll" />
                  <!--<File Id="NLog.dll.PisoSvc"
                    Name="NLog.dll"
                    Source="$(var.PISOBUILDDIR)NLog.dll" />-->
                </Component>
              </Directory>

              <Component Id="IronFoundry.Warden.Service.exe.config" Guid="{753F821E-2467-4BC6-A887-3D6EB042A9C8}" Win64="$(var.WIN64.COMPONENTS)">
                <File Id="IronFoundry.Warden.Service.exe.config"
                      Name="IronFoundry.Warden.Service.exe.config"
                      Source="$(var.SVCBUILDDIR)IronFoundry.Warden.Service.exe.config" />

                <util:XmlFile Id="Config.XmlFile.1" Sequence="1" Action="setValue"
                    File="[#IronFoundry.Warden.Service.exe.config]"
                    ElementPath="/configuration/warden-server/@container-basepath"
                    Value="[CONTAINER_BASE_PATH]"/>
                <util:XmlFile Id="Config.XmlFile.2" Sequence="2" Action="setValue"
                    File="[#IronFoundry.Warden.Service.exe.config]"
                    ElementPath="/configuration/warden-server/@tcp-port"
                    Value="[TCP_PORT]"/>
              </Component>

              <Component Id="WindowsServiceUser" Guid="{711B420B-96B9-43C7-B89E-B67C26877D40}" Win64="$(var.WIN64.COMPONENTS)">
                  <Condition><![CDATA[SERVICE_CREDENTIALS_USER <> "LocalSystem"]]></Condition>
                  <util:User Id="UpdateUserLogonAsService" RemoveOnUninstall="no" UpdateIfExists="yes" CreateUser="no" Name="[SERVICE_CREDENTIALS_USER]" LogonAsService="yes" />
                  <CreateFolder/>
              </Component>

              <Component Id="ServiceConfigKeys" Guid="{F524E952-9832-4CAC-BA98-0F977820D1C4}" Win64="$(var.WIN64.COMPONENTS)">
                <RegistryKey Key="$(var.RootRegistryPath)" Root="HKLM">
                  <RegistryValue Id="regContainerBasePath" Name="ContainerBasePath" Value="[CONTAINER_BASE_PATH]" Type="string"/>
                  <RegistryValue Id="regTcpPort" Name="TcpPort" Value="[TCP_PORT]" Type="string"/>
                </RegistryKey>
              </Component>

              <Component Id="IronFoundry.Warden.Service" Guid="{8F773322-7413-4E30-A609-B41BF9FDB04A}" Win64="$(var.WIN64.COMPONENTS)" KeyPath="no">
                <File Id="IronFoundry.Warden.Service.exe"
                      Name="IronFoundry.Warden.Service.exe"
                      Source="$(var.SVCBUILDDIR)IronFoundry.Warden.Service.exe"
                      KeyPath="yes" />
                <File Id="IronFoundry.Warden.Service.pdb"
                      Name="IronFoundry.Warden.Service.pdb"
                      Source="$(var.SVCBUILDDIR)IronFoundry.Warden.Service.pdb" />
                <File Id="IronFoundry.Warden.dll"
                      Name="IronFoundry.Warden.dll"
                      Source="$(var.SVCBUILDDIR)IronFoundry.Warden.dll" />
                <File Id="IronFoundry.Warden.pdb"
                      Name="IronFoundry.Warden.pdb"
                      Source="$(var.SVCBUILDDIR)IronFoundry.Warden.pdb" />
                <File Id="IronFoundry.Warden.Protocol.dll"
                      Name="IronFoundry.Warden.Protocol.dll"
                      Source="$(var.SVCBUILDDIR)IronFoundry.Warden.Protocol.dll" />
                <File Id="IronFoundry.Warden.Protocol.pdb"
                      Name="IronFoundry.Warden.Protocol.pdb"
                      Source="$(var.SVCBUILDDIR)IronFoundry.Warden.Protocol.pdb" />
                <File Id="IronFoundry.Warden.ProcessIsolation.dll.Service"
                      Name="IronFoundry.Warden.ProcessIsolation.dll"
                      Source="$(var.SVCBUILDDIR)IronFoundry.Warden.ProcessIsolation.dll" />
                <File Id="IronFoundry.Warden.ProcessIsolation.pdb.Service"
                      Name="IronFoundry.Warden.ProcessIsolation.pdb"
                      Source="$(var.SVCBUILDDIR)IronFoundry.Warden.ProcessIsolation.pdb" />
                <File Id="AsproLock.dll"
                      Name="AsproLock.dll"
                      Source="$(var.SVCBUILDDIR)AsproLock.dll" />
                <File Id="AsproLock.pdb"
                      Name="AsproLock.pdb"
                      Source="$(var.SVCBUILDDIR)AsproLock.pdb" />
                <File Id="ICSharpCode.SharpZipLib.dll"
                      Name="ICSharpCode.SharpZipLib.dll"
                      Source="$(var.SVCBUILDDIR)ICSharpCode.SharpZipLib.dll" />
                <File Id="NLog.dll"
                      Name="NLog.dll"
                      Source="$(var.SVCBUILDDIR)NLog.dll" />
                <File Id="Newtonsoft.Json.dll"
                      Name="Newtonsoft.Json.dll"
                      Source="$(var.SVCBUILDDIR)Newtonsoft.Json.dll" />
                <File Id="protobuf_net.dll"
                      Name="protobuf-net.dll"
                      Source="$(var.SVCBUILDDIR)protobuf-net.dll" />
                <File Id="protobuf_net.pdb"
                      Name="protobuf-net.pdb"
                      Source="$(var.SVCBUILDDIR)protobuf-net.pdb" />
                <File Id="Topshelf.dll"
                      Name="Topshelf.dll"
                      Source="$(var.SVCBUILDDIR)Topshelf.dll" />
                <File Id="Topshelf.NLog.dll"
                      Name="Topshelf.NLog.dll"
                      Source="$(var.SVCBUILDDIR)Topshelf.NLog.dll" />

                <!-- NB: Name="ironfoundry.warden" MUST MATCH name in Topshelf config and WinServiceInstaller -->
                <ServiceInstall Id="IronFoundry.Warden.Service.ServiceInstaller"
                                Type="ownProcess"
                                Vital="yes"
                                Name="ironfoundry.warden"
                                DisplayName="[SERVICENAME]"
                                Description="$(var.ProductName) Service"
                                Start="auto"
                                Account="[SERVICE_CREDENTIALS_USER]"
                                Password="[SERVICE_CREDENTIALS_PASSWORD]"
                                ErrorControl="ignore"
                                Interactive="no">
                                <util:ServiceConfig FirstFailureActionType="restart" SecondFailureActionType="restart" ThirdFailureActionType="restart"
                                  RestartServiceDelayInSeconds="180" ResetPeriodInDays="1" />
                </ServiceInstall>
                <ServiceControl Id="IronFoundry.Warden.Service.StartService"
                                Start="install"
                                Name="ironfoundry.warden"
                                Wait="yes" />
                <ServiceControl Id="IronFoundry.Warden.Service.StopService"
                                Stop="uninstall"
                                Remove="uninstall"
                                Name="ironfoundry.warden"
                                Wait="yes" />
                <RegistryKey Key="$(var.RootRegistryPath)" Root="HKLM">
                  <RegistryValue Id="SERVICENAME" Name="ServiceName" Value="[SERVICENAME]" Type="string" />
                </RegistryKey>
              </Component>
              <!-- END (Windows Service) -->

            </Directory>
          </Directory>
        </Directory>
      </Directory>
    </Directory>

    <!-- START (Configuration Settings) -->
    <Property Id="CONTAINER_BASE_PATH" Secure="yes" Value="C:\IronFoundry\Warden\Containers">
      <RegistrySearch Root="HKLM" Type="raw" Key="$(var.RootRegistryPath)" Id="regContainerBaseDirectory" Name="ContainerBaseDirectory"/>
    </Property>
    <Property Id="TCP_PORT" Secure="yes" Value="4444">
      <RegistrySearch Root="HKLM" Type="raw" Key="$(var.RootRegistryPath)" Id="regTcpPort" Name="TcpPort" />
    </Property>
    <Property Id="SERVICE_CREDENTIALS_USER" Value="LocalSystem" />
    <Property Id="SERVICE_CREDENTIALS_PASSWORD" Admin="yes" Hidden="yes" />
    <Property Id="CREDENTIALS_VALID" Value="1" />
    <Property Id="CONTAINER_PATH_VALID" Value="1" />
    <Property Id="TCP_PORT_VALID" Value="1" />
    <!-- END (Configuration Settings) -->

    <!-- Define variables that the ServiceConfigDlg uses -->
    <WixVariable Id="ServiceContainerBaseDirProperty" Value="CONTAINER_BASE_PATH"/>
    <WixVariable Id="ServiceTcpPortProperty" Value="TCP_PORT"/>
    <WixVariable Id="ServiceCredentialsUserProperty" Value="SERVICE_CREDENTIALS_USER" />
    <WixVariable Id="ServiceCredentialsPasswordProperty" Value="SERVICE_CREDENTIALS_PASSWORD" />
    <WixVariable Id="CredentialsValidProperty" Value="CREDENTIALS_VALID" />
    <WixVariable Id="ContainerPathValidProperty" Value="CONTAINER_PATH_VALID" />
    <WixVariable Id="TcpPortValidProperty" Value="TCP_PORT_VALID" />

    <!-- START (User Interface) Reference: http://wix.sourceforge.net/manual-wix3/WixUI_dialog_library.htm -->
    <WixVariable Id="WixUIBannerBmp"  Value="Banner.bmp" />
    <WixVariable Id="WixUIDialogBmp"  Value="WelcomeBanner.bmp" />
    <WixVariable Id="WixUILicenseRtf" Value="License.rtf" />
    <WixVariable Id="WixUISupportPerUser" Value="0" />

    <Property Id="WIXUI_FEATURETREE" Value="$(var.ProductName) Service"/>

    <UIRef Id="WixUI_Common" />

    <UI>
      <TextStyle Id="WixUI_Font_Normal" FaceName="Tahoma" Size="8" />
      <TextStyle Id="WixUI_Font_Bigger" FaceName="Tahoma" Size="12" />
      <TextStyle Id="WixUI_Font_Title"  FaceName="Tahoma" Size="9" />
      <TextStyle Id="Red8" FaceName="Tahoma" Size="8" Red="255" Green="0" Blue="0" />

      <Property Id="DefaultUIFont" Value="WixUI_Font_Normal" />
      <Property Id="WixUI_Mode"    Value="FeatureTree" />

      <DialogRef Id="ErrorDlg"        />
      <DialogRef Id="FatalError"      />
      <DialogRef Id="FilesInUse"      />
      <DialogRef Id="MsiRMFilesInUse" />
      <DialogRef Id="PrepareDlg"      />
      <DialogRef Id="ProgressDlg"     />
      <DialogRef Id="ResumeDlg"       />
      <DialogRef Id="UserExit"        />

      <!-- Service Config Dialog -->
      <?include ServiceConfigDialog.wxi?>
      <?include ServiceConfigDialog_Validation.wxi?>

      <Publish Dialog="WelcomeDlg" Control="Next" Event="NewDialog" Value="LicenseAgreementDlg">1</Publish>
      <Publish Dialog="LicenseAgreementDlg" Control="Back" Event="NewDialog" Value="WelcomeDlg">1</Publish>
      <Publish Dialog="LicenseAgreementDlg" Control="Next" Event="NewDialog" Value="CustomizeDlg"><![CDATA[LicenseAccepted = "1"]]></Publish>

      <Publish Dialog="MaintenanceWelcomeDlg" Control="Next" Event="NewDialog" Value="MaintenanceTypeDlg">1</Publish>

      <Publish Dialog="CustomizeDlg" Control="Back" Event="NewDialog" Order="1" Value="LicenseAgreementDlg"><![CDATA[NOT Installed]]></Publish>
      <Publish Dialog="CustomizeDlg" Control="Back" Event="NewDialog" Order="2" Value="MaintenanceTypeDlg"><![CDATA[Installed]]></Publish>
      <Publish Dialog="CustomizeDlg" Control="Next" Event="NewDialog" Order="1" Value="ServiceConfigDlg">1</Publish>

      <Publish Dialog="ServiceConfigDlg" Control="Back" Event="NewDialog" Order="1" Value="CustomizeDlg"><![CDATA[NOT WixUI_InstallMode = "Repair"]]></Publish>
      <Publish Dialog="ServiceConfigDlg" Control="Back" Event="NewDialog" Order="2" Value="MaintenanceTypeDlg"><![CDATA[Installed AND WixUI_InstallMode = "Repair"]]></Publish>
      <Publish Dialog="ServiceConfigDlg" Control="Browse" Event="DoAction" Value="OpenFolderBrowser" Order="1">1</Publish>
      <Publish Dialog="ServiceConfigDlg" Control="Browse" Property="CONTAINER_BASE_PATH" Value="[CONTAINER_BASE_PATH]" Order="2">1</Publish>
      <Publish Dialog="ServiceConfigDlg" Control="Next" Event="DoAction" Order="1" Value="ValidateCredentials">1</Publish>
      <Publish Dialog="ServiceConfigDlg" Control="Next" Event="DoAction" Order="2" Value="ValidateSettings">1</Publish>
      <Publish Dialog="ServiceConfigDlg" Control="Next" Event="NewDialog" Order="2" Value="ServiceValidationDlg">
          <![CDATA[CREDENTIALS_VALID = "0" OR CONTAINER_PATH_VALID = "0" OR TCP_PORT_VALID = "0"]]>
      </Publish>
      <Publish Dialog="ServiceConfigDlg" Control="Next" Event="NewDialog" Order="3" Value="VerifyReadyDlg">
          <![CDATA[CREDENTIALS_VALID = "1" AND CONTAINER_PATH_VALID = "1" AND TCP_PORT_VALID = "1"]]>
      </Publish>

      <Publish Dialog="ServiceValidationDlg" Control="Back" Event="NewDialog" Order="1" Value="CustomizeDlg"><![CDATA[NOT WixUI_InstallMode = "Repair"]]></Publish>
      <Publish Dialog="ServiceValidationDlg" Control="Back" Event="NewDialog" Order="2" Value="MaintenanceTypeDlg"><![CDATA[Installed AND WixUI_InstallMode = "Repair"]]></Publish>
      <Publish Dialog="ServiceValidationDlg" Control="Browse" Event="DoAction" Value="OpenFolderBrowser" Order="1">1</Publish>
      <Publish Dialog="ServiceValidationDlg" Control="Browse" Property="CONTAINER_BASE_PATH" Value="[CONTAINER_BASE_PATH]" Order="2">1</Publish>
      <Publish Dialog="ServiceValidationDlg" Control="Next" Event="DoAction" Order="1" Value="ValidateCredentials">1</Publish>
      <Publish Dialog="ServiceValidationDlg" Control="Next" Event="DoAction" Order="2" Value="ValidateSettings">1</Publish>
      <Publish Dialog="ServiceValidationDlg" Control="Next" Event="NewDialog" Order="2" Value="ServiceConfigDlg">
          <![CDATA[CREDENTIALS_VALID = "0" OR CONTAINER_PATH_VALID = "0" OR TCP_PORT_VALID = "0"]]>
      </Publish>
      <Publish Dialog="ServiceValidationDlg" Control="Next" Event="NewDialog" Order="3" Value="VerifyReadyDlg">
          <![CDATA[CREDENTIALS_VALID = "1" AND CONTAINER_PATH_VALID = "1" AND TCP_PORT_VALID = "1"]]>
      </Publish>

      <Publish Dialog="VerifyReadyDlg" Control="Back" Order="1" Value="MaintenanceTypeDlg" Event="NewDialog"><![CDATA[WixUI_InstallMode = "Remove"]]></Publish>
      <Publish Dialog="VerifyReadyDlg" Control="Back" Order="2" Value="ServiceConfigDlg" Event="NewDialog"><![CDATA[NOT WixUI_InstallMode = "Remove"]]></Publish>

      <Publish Dialog="MaintenanceTypeDlg" Control="ChangeButton"  Event="NewDialog" Value="CustomizeDlg">1</Publish>
      <Publish Dialog="MaintenanceTypeDlg" Control="RepairButton"  Event="NewDialog" Value="ServiceConfigDlg">1</Publish>
      <Publish Dialog="MaintenanceTypeDlg" Control="RemoveButton"  Event="NewDialog" Value="VerifyReadyDlg">1</Publish>
      <Publish Dialog="MaintenanceTypeDlg" Control="Back"          Event="NewDialog" Value="MaintenanceWelcomeDlg">1</Publish>

      <Publish Dialog="ExitDialog" Control="Finish" Event="EndDialog" Value="Return" Order="1">1</Publish>
    </UI>
    <!-- END (User Interface) -->

    <!-- START (Custom Actions) -->
    <Binary Id="InstallerCA.dll" SourceFile="$(var.CABUILDDIR)IronFoundry.Warden.Service.InstallerCA.CA.dll" />
    <CustomAction Id="ValidateCredentials" BinaryKey="InstallerCA.dll" DllEntry="ValidateCredentials" Execute="immediate" />
    <CustomAction Id="ValidateSettings" BinaryKey="InstallerCA.dll" DllEntry="ValidateSettings" Execute="immediate" />
    <CustomAction Id="OpenFolderBrowser" BinaryKey="InstallerCA.dll" DllEntry="OpenFolderBrowser" Execute="immediate" />
    <!-- END (Custom Actions) -->

    <ComponentGroup Id="CommonComponents">
      <ComponentRef Id="InstallDirRegKey" Primary="yes"/>
      <ComponentRef Id="PerProductRegistryKey" Primary="yes"/>
      <ComponentRef Id="IronFoundryRegKey" Primary="yes"/>
      <ComponentRef Id="MaintainLogDir" Primary="yes"/>
      <ComponentRef Id="MaintainInstallDir" Primary="yes"/>
      <ComponentRef Id="MaintainIronFoundryDir" Primary="yes"/>
    </ComponentGroup>

    <ComponentGroup Id="WardenServiceComponents">
      <ComponentRef Id="IronFoundry.Warden.Service" Primary="yes" />
      <ComponentRef Id="IronFoundry.Warden.Service.exe.config" Primary="yes"/>
      <ComponentRef Id="IronFoundry.Warden.ProcessIsolationService" Primary="yes"/>
      <ComponentRef Id="ServiceConfigKeys" Primary="yes"/>
      <ComponentRef Id="WindowsServiceUser" Primary="yes"/>
      <ComponentRef Id="UninstallShortcut" Primary="yes"/>
      <ComponentRef Id="ProductCodeRegKey" Primary="yes"/>
    </ComponentGroup>

    <InstallUISequence>
      <FindRelatedProducts Before="LaunchConditions" />
      <Custom Action="NewerVersion" After="FindRelatedProducts"><![CDATA[NEWERVERSIONDETECTED]]></Custom>
    </InstallUISequence>

    <CustomAction Id="NewerVersion" Error="This version or a newer version of [ProductName] is already installed." />

    <InstallExecuteSequence>
      <Custom Action="NewerVersion" Before="FindRelatedProducts"><![CDATA[NEWERVERSIONDETECTED]]></Custom>
      <RemoveExistingProducts After="InstallFinalize"/>
    </InstallExecuteSequence>

    <Feature Id="Product" 
             Title="$(var.ShortProductName) Service" 
             Description="$(var.ProductName) Service $(var.VERSION)" 
             Level="1" AllowAdvertise="no" InstallDefault="local" 
             Absent="disallow" ConfigurableDirectory="INSTALLDIR" TypicalDefault="install">
      <ComponentGroupRef Id="WardenServiceComponents" Primary="yes" />
      <ComponentGroupRef Id="CommonComponents" />
    </Feature>
  </Product>
</Wix>